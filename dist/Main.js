// Generated by psc-bundle 0.7.4.1
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    return JSON.stringify(s);
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Show = function (show) {
      this.show = show;
  };                                                                           
  var unit = {};
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (__dict_Show_1) {
      return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var eqString = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var $$const = function (a) {
      return function (_86) {
          return a;
      };
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_17) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_16) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_17(_16));
                  });
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["Eq"] = Eq;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["semigroupArray"] = semigroupArray;
  exports["eqString"] = eqString;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["foreachE"] = $foreign.foreachE;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var print = function (__dict_Show_0) {
      return function (_830) {
          return $foreign.log(Prelude.show(__dict_Show_0)(_830));
      };
  };
  exports["print"] = print;
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  "use strict";

  // module Control.Monad.Eff.DOM

  exports.body = function() {
      return document.body;
  };

  exports.createElement = function(name) {
      return function() {
          return document.createElement(name);
      };
  };

  exports.querySelectorImpl = function(r, f, s) {
      return function() {
          var result = document.querySelector(s);
          return result ? f(result) : r;
      };
  };

  exports.querySelectorAll = function(selector) {
      return function() {
	  return Array.prototype.slice.apply(document.querySelectorAll(selector));
      };
  };

  exports.appendChild = function(child) {
      return function(node) {
          return function() {
              node.appendChild(child);
              return node;
          };
      };
  };

  exports.addClass = function(className) {
      return function(node) {
          return function() {
              node.classList.add(className);
              return node;
          };
      };
  };

  exports.setText = function(text) {
      return function(node) {
          return function() {
              node.textContent = text;
              return node;
          };
      };
  };

  exports.getValue = function(node) {
      return function() {
          return node.value;
      };
  };

  exports.setInnerHTML = function(html) {
      return function(node) {
          return function() {
              node.innerHTML = html;
              return node;
          };
      };
  };

  exports.addEventListener = function(name) {
      return function(handler) {
          return function(node) {
              return function() {
                  node.addEventListener(name, function(e) {
                      handler();
                      e.preventDefault();
                  });
              };
          };
      };
  };
 
})(PS["Control.Monad.Eff.DOM"] = PS["Control.Monad.Eff.DOM"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (__dict_Foldable_20) {
      return function (__dict_Monoid_21) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_20)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_21["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_21))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_22) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_22);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (__dict_Traversable_12) {
      return function (__dict_Applicative_13) {
          return function (tma) {
              return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_15) {
      return sequenceDefault(traversableArray)(__dict_Applicative_15);
  }, function (__dict_Applicative_14) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_283) {
          if (_283 instanceof Left) {
              return new Left(_283.value0);
          };
          if (_283 instanceof Right) {
              return new Right(f(_283.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _283.constructor.name ]);
      };
  });
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_285) {
      return function (r) {
          if (_285 instanceof Left) {
              return new Left(_285.value0);
          };
          if (_285 instanceof Right) {
              return Prelude["<$>"](functorEither)(_285.value0)(r);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _285.constructor.name, r.constructor.name ]);
      };
  });
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.length = function (s) {
    return s.length;
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  exports["length"] = $foreign.length;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  }; 
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.DOM"];
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var querySelector = function (s) {
      return $foreign.querySelectorImpl(Data_Maybe.Nothing.value, Data_Maybe.Just.create, s);
  };
  exports["querySelector"] = querySelector;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["setInnerHTML"] = $foreign.setInnerHTML;
  exports["getValue"] = $foreign.getValue;
  exports["setText"] = $foreign.setText;
  exports["addClass"] = $foreign.addClass;
  exports["appendChild"] = $foreign.appendChild;
  exports["querySelectorAll"] = $foreign.querySelectorAll;
  exports["createElement"] = $foreign.createElement;
  exports["body"] = $foreign.body;;
 
})(PS["Control.Monad.Eff.DOM"] = PS["Control.Monad.Eff.DOM"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var HomePhone = (function () {
      function HomePhone() {

      };
      HomePhone.value = new HomePhone();
      return HomePhone;
  })();
  var WorkPhone = (function () {
      function WorkPhone() {

      };
      WorkPhone.value = new WorkPhone();
      return WorkPhone;
  })();
  var CellPhone = (function () {
      function CellPhone() {

      };
      CellPhone.value = new CellPhone();
      return CellPhone;
  })();
  var OtherPhone = (function () {
      function OtherPhone() {

      };
      OtherPhone.value = new OtherPhone();
      return OtherPhone;
  })();
  var showPhoneType = new Prelude.Show(function (_10) {
      if (_10 instanceof HomePhone) {
          return "HomePhone";
      };
      if (_10 instanceof WorkPhone) {
          return "WorkPhone";
      };
      if (_10 instanceof CellPhone) {
          return "CellPhone";
      };
      if (_10 instanceof OtherPhone) {
          return "OtherPhone";
      };
      throw new Error("Failed pattern match at Data.AddressBook line 65, column 1 - line 71, column 1: " + [ _10.constructor.name ]);
  });
  var showPhoneNumber = new Prelude.Show(function (_11) {
      return "PhoneNumber " + ("{ type: " + (Prelude.show(showPhoneType)(_11.type) + (", number: " + (Prelude.show(Prelude.showString)(_11.number) + " }"))));
  });
  var showAddress = new Prelude.Show(function (_9) {
      return "Address " + ("{ street: " + (Prelude.show(Prelude.showString)(_9.street) + (", city: " + (Prelude.show(Prelude.showString)(_9.city) + (", state: " + (Prelude.show(Prelude.showString)(_9.state) + " }"))))));
  });
  var showPerson = new Prelude.Show(function (_12) {
      return "Person " + ("{ firstName: " + (Prelude.show(Prelude.showString)(_12.firstName) + (", lastName: " + (Prelude.show(Prelude.showString)(_12.lastName) + (", address: " + (Prelude.show(showAddress)(_12.address) + (", phones: " + (Prelude.show(Prelude.showArray(showPhoneNumber))(_12.phones) + " }"))))))));
  });
  var phoneNumber = function (ty) {
      return function (number) {
          return {
              type: ty, 
              number: number
          };
      };
  };
  var person = function (firstName) {
      return function (lastName) {
          return function (addr) {
              return function (phones) {
                  return {
                      firstName: firstName, 
                      lastName: lastName, 
                      address: addr, 
                      phones: phones
                  };
              };
          };
      };
  };
  var address = function (street) {
      return function (city) {
          return function (state) {
              return {
                  street: street, 
                  city: city, 
                  state: state
              };
          };
      };
  };
  exports["HomePhone"] = HomePhone;
  exports["WorkPhone"] = WorkPhone;
  exports["CellPhone"] = CellPhone;
  exports["OtherPhone"] = OtherPhone;
  exports["person"] = person;
  exports["phoneNumber"] = phoneNumber;
  exports["address"] = address;
  exports["showAddress"] = showAddress;
  exports["showPhoneType"] = showPhoneType;
  exports["showPhoneNumber"] = showPhoneNumber;
  exports["showPerson"] = showPerson;;
 
})(PS["Data.AddressBook"] = PS["Data.AddressBook"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Foreign_Undefined = PS["Data.Foreign.Undefined"];
  var Data_Int = PS["Data.Int"];
  var Data_Traversable = PS["Data.Traversable"];     
  var IsForeign = function (read) {
      this.read = read;
  };
  var stringIsForeign = new IsForeign(Data_Foreign.readString);
  var read = function (dict) {
      return dict.read;
  };
  exports["IsForeign"] = IsForeign;
  exports["read"] = read;
  exports["stringIsForeign"] = stringIsForeign;;
 
})(PS["Data.Foreign.Class"] = PS["Data.Foreign.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Invalid = (function () {
      function Invalid(value0) {
          this.value0 = value0;
      };
      Invalid.create = function (value0) {
          return new Invalid(value0);
      };
      return Invalid;
  })();
  var Valid = (function () {
      function Valid(value0) {
          this.value0 = value0;
      };
      Valid.create = function (value0) {
          return new Valid(value0);
      };
      return Valid;
  })();
  var runV = function (f) {
      return function (g) {
          return function (_121) {
              if (_121 instanceof Invalid) {
                  return f(_121.value0);
              };
              if (_121 instanceof Valid) {
                  return g(_121.value0);
              };
              throw new Error("Failed pattern match at Data.Validation line 38, column 1 - line 39, column 1: " + [ f.constructor.name, g.constructor.name, _121.constructor.name ]);
          };
      };
  };
  var invalid = Invalid.create;
  var functorV = new Prelude.Functor(function (f) {
      return function (_124) {
          if (_124 instanceof Invalid) {
              return new Invalid(_124.value0);
          };
          if (_124 instanceof Valid) {
              return new Valid(f(_124.value0));
          };
          throw new Error("Failed pattern match at Data.Validation line 51, column 1 - line 55, column 1: " + [ f.constructor.name, _124.constructor.name ]);
      };
  });
  var applyV = function (__dict_Semigroup_2) {
      return new Prelude.Apply(function () {
          return functorV;
      }, function (_125) {
          return function (_126) {
              if (_125 instanceof Invalid && _126 instanceof Invalid) {
                  return new Invalid(Prelude["<>"](__dict_Semigroup_2)(_125.value0)(_126.value0));
              };
              if (_125 instanceof Invalid) {
                  return new Invalid(_125.value0);
              };
              if (_126 instanceof Invalid) {
                  return new Invalid(_126.value0);
              };
              if (_125 instanceof Valid && _126 instanceof Valid) {
                  return new Valid(_125.value0(_126.value0));
              };
              throw new Error("Failed pattern match at Data.Validation line 55, column 1 - line 61, column 1: " + [ _125.constructor.name, _126.constructor.name ]);
          };
      });
  };
  var applicativeV = function (__dict_Semigroup_3) {
      return new Prelude.Applicative(function () {
          return applyV(__dict_Semigroup_3);
      }, Valid.create);
  };
  exports["runV"] = runV;
  exports["invalid"] = invalid;
  exports["functorV"] = functorV;
  exports["applyV"] = applyV;
  exports["applicativeV"] = applicativeV;;
 
})(PS["Data.Validation"] = PS["Data.Validation"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports["regex'"] = function (s1) {
    return function (s2) {
      return new RegExp(s1, s2);
    };
  };

  exports.test = function (r) {
    return function (s) {
      return r.test(s);
    };
  };
 
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];                                            
  var renderFlags = function (f) {
      return (function () {
          if (f.global) {
              return "g";
          };
          if (!f.global) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.global.constructor.name ]);
      })() + ((function () {
          if (f.ignoreCase) {
              return "i";
          };
          if (!f.ignoreCase) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.ignoreCase.constructor.name ]);
      })() + ((function () {
          if (f.multiline) {
              return "m";
          };
          if (!f.multiline) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.multiline.constructor.name ]);
      })() + ((function () {
          if (f.sticky) {
              return "y";
          };
          if (!f.sticky) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.sticky.constructor.name ]);
      })() + (function () {
          if (f.unicode) {
              return "u";
          };
          if (!f.unicode) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 63, column 1 - line 64, column 1: " + [ f.unicode.constructor.name ]);
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](s)(renderFlags(f));
      };
  };
  exports["renderFlags"] = renderFlags;
  exports["regex"] = regex;
  exports["test"] = $foreign.test;;
 
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Validation = PS["Data.Validation"];
  var Data_AddressBook = PS["Data.AddressBook"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Control_Apply = PS["Control.Apply"];     
  var FirstNameField = (function () {
      function FirstNameField() {

      };
      FirstNameField.value = new FirstNameField();
      return FirstNameField;
  })();
  var LastNameField = (function () {
      function LastNameField() {

      };
      LastNameField.value = new LastNameField();
      return LastNameField;
  })();
  var StreetField = (function () {
      function StreetField() {

      };
      StreetField.value = new StreetField();
      return StreetField;
  })();
  var CityField = (function () {
      function CityField() {

      };
      CityField.value = new CityField();
      return CityField;
  })();
  var StateField = (function () {
      function StateField() {

      };
      StateField.value = new StateField();
      return StateField;
  })();
  var PhoneList = (function () {
      function PhoneList() {

      };
      PhoneList.value = new PhoneList();
      return PhoneList;
  })();
  var PhoneField = (function () {
      function PhoneField(value0) {
          this.value0 = value0;
      };
      PhoneField.create = function (value0) {
          return new PhoneField(value0);
      };
      return PhoneField;
  })();
  var ValidationError = (function () {
      function ValidationError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ValidationError.create = function (value0) {
          return function (value1) {
              return new ValidationError(value0, value1);
          };
      };
      return ValidationError;
  })();
  var phoneNumberRegex = Data_String_Regex.regex("^\\d{3}-\\d{3}-\\d{4}$")({
      unicode: false, 
      sticky: false, 
      multiline: false, 
      ignoreCase: false, 
      global: false
  });
  var fieldShow = new Prelude.Show(function (_12) {
      if (_12 instanceof FirstNameField) {
          return "FirstName";
      };
      if (_12 instanceof LastNameField) {
          return "LastName";
      };
      if (_12 instanceof StreetField) {
          return "Street";
      };
      if (_12 instanceof CityField) {
          return "City";
      };
      if (_12 instanceof StateField) {
          return "State";
      };
      if (_12 instanceof PhoneList) {
          return "PhoneNumbers";
      };
      if (_12 instanceof PhoneField) {
          return Prelude.show(Data_AddressBook.showPhoneType)(_12.value0);
      };
      throw new Error("Failed pattern match at Data.AddressBook.Validation line 28, column 1 - line 38, column 1: " + [ _12.constructor.name ]);
  });
  var lengthIs = function (field) {
      return function (len) {
          return function (value) {
              if (Data_String.length(value) !== len) {
                  return Data_Validation.invalid([ new ValidationError("Field '" + (Prelude.show(fieldShow)(field) + ("' must have length " + Prelude.show(Prelude.showInt)(len))), field) ]);
              };
              return Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(Prelude.unit);
          };
      };
  };
  var matches = function (field) {
      return function (regex) {
          return function (value) {
              if (Data_String_Regex.test(regex)(value)) {
                  return Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(Prelude.unit);
              };
              return Data_Validation.invalid([ new ValidationError("Field '" + (Prelude.show(fieldShow)(field) + "' did not match the required format"), field) ]);
          };
      };
  };
  var validatePhoneNumber = function (_10) {
      return Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupArray))(Prelude["<$>"](Data_Validation.functorV)(Data_AddressBook.phoneNumber)(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_10.type)))(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(matches(new PhoneField(_10.type))(phoneNumberRegex)(_10.number))(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_10.number)));
  };
  var nonEmpty = function (field) {
      return function (_7) {
          if (_7 === "") {
              return Data_Validation.invalid([ new ValidationError("Field '" + (Prelude.show(fieldShow)(field) + "' cannot be empty"), field) ]);
          };
          return Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(Prelude.unit);
      };
  };
  var validateAddress = function (_9) {
      return Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupArray))(Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupArray))(Prelude["<$>"](Data_Validation.functorV)(Data_AddressBook.address)(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(nonEmpty(StreetField.value)(_9.street))(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_9.street))))(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(nonEmpty(CityField.value)(_9.city))(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_9.city))))(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(lengthIs(StateField.value)(2)(_9.state))(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_9.state)));
  };
  var arrayNonEmpty = function (field) {
      return function (_8) {
          if (_8.length === 0) {
              return Data_Validation.invalid([ new ValidationError("Field '" + (Prelude.show(fieldShow)(field) + "' must contain at least one value"), field) ]);
          };
          return Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(Prelude.unit);
      };
  };
  var validatePerson = function (_11) {
      return Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupArray))(Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupArray))(Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupArray))(Prelude["<$>"](Data_Validation.functorV)(Data_AddressBook.person)(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(nonEmpty(FirstNameField.value)(_11.firstName))(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_11.firstName))))(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(nonEmpty(LastNameField.value)(_11.lastName))(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupArray))(_11.lastName))))(validateAddress(_11.address)))(Control_Apply["*>"](Data_Validation.applyV(Prelude.semigroupArray))(arrayNonEmpty(PhoneList.value)(_11.phones))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Validation.applicativeV(Prelude.semigroupArray))(validatePhoneNumber)(_11.phones)));
  };
  var validatePerson$prime = function (p) {
      return Data_Validation.runV(Data_Either.Left.create)(Data_Either.Right.create)(validatePerson(p));
  };
  exports["FirstNameField"] = FirstNameField;
  exports["LastNameField"] = LastNameField;
  exports["StreetField"] = StreetField;
  exports["CityField"] = CityField;
  exports["StateField"] = StateField;
  exports["PhoneList"] = PhoneList;
  exports["PhoneField"] = PhoneField;
  exports["ValidationError"] = ValidationError;
  exports["validatePerson'"] = validatePerson$prime;
  exports["validatePerson"] = validatePerson;
  exports["validatePhoneNumber"] = validatePhoneNumber;
  exports["validateAddress"] = validateAddress;
  exports["matches"] = matches;
  exports["phoneNumberRegex"] = phoneNumberRegex;
  exports["lengthIs"] = lengthIs;
  exports["arrayNonEmpty"] = arrayNonEmpty;
  exports["nonEmpty"] = nonEmpty;
  exports["fieldShow"] = fieldShow;;
 
})(PS["Data.AddressBook.Validation"] = PS["Data.AddressBook.Validation"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_AddressBook = PS["Data.AddressBook"];
  var Data_AddressBook_Validation = PS["Data.AddressBook.Validation"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_DOM = PS["Control.Monad.Eff.DOM"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];     
  var valueOf = function (sel) {
      return function __do() {
          var _1 = Control_Monad_Eff_DOM.querySelector(sel)();
          return (function () {
              if (_1 instanceof Data_Maybe.Nothing) {
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)("");
              };
              if (_1 instanceof Data_Maybe.Just) {
                  return function __do() {
                      var _0 = Control_Monad_Eff_DOM.getValue(_1.value0)();
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)((function () {
                          var _11 = Data_Foreign_Class.read(Data_Foreign_Class.stringIsForeign)(_0);
                          if (_11 instanceof Data_Either.Right) {
                              return _11.value0;
                          };
                          return "";
                      })())();
                  };
              };
              throw new Error("Failed pattern match at Data.AddressBook.UI line 21, column 1 - line 22, column 1: " + [ _1.constructor.name ]);
          })()();
      };
  };
  var validateControls = function __do() {
      Control_Monad_Eff_Console.log("Running validators")();
      var _4 = Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_AddressBook.person)(valueOf("#inputFirstName")))(valueOf("#inputLastName")))(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<*>"](Control_Monad_Eff.applyEff)(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_AddressBook.address)(valueOf("#inputStreet")))(valueOf("#inputCity")))(valueOf("#inputState"))))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)([ Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_AddressBook.phoneNumber(Data_AddressBook.HomePhone.value))(valueOf("#inputHomePhone")), Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_AddressBook.phoneNumber(Data_AddressBook.CellPhone.value))(valueOf("#inputCellPhone")), Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_AddressBook.phoneNumber(Data_AddressBook.WorkPhone.value))(valueOf("#inputWorkPhone")) ]))();
      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Data_AddressBook_Validation["validatePerson'"](_4))();
  };
  var displayValidationErrors = function (errs) {
      return function __do() {
          Control_Monad_Eff.foreachE(errs)(function (_7) {
              return function __do() {
                  var _3 = Control_Monad_Eff_DOM.querySelector("div.errors" + Prelude.show(Data_AddressBook_Validation.fieldShow)(_7.value1))();
                  if (_3 instanceof Data_Maybe.Just) {
                      var _2 = Control_Monad_Eff_DOM.createElement("div")();
                      Control_Monad_Eff_DOM.addClass("alert")(_2)();
                      Control_Monad_Eff_DOM.addClass("alert-danger")(_2)();
                      Control_Monad_Eff_DOM.setText(_7.value0)(_2)();
                      Control_Monad_Eff_DOM.appendChild(_2)(_3.value0)();
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
                  };
                  throw new Error("Failed pattern match at Data.AddressBook.UI line 32, column 1 - line 33, column 1: " + [ _3.constructor.name ]);
              };
          })();
          return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
      };
  };
  var validateAndUpdateUI = function __do() {
      var _6 = Control_Monad_Eff_DOM.querySelectorAll(".validationErrors")();
      Control_Monad_Eff.foreachE(_6)(function (div) {
          return function __do() {
              Control_Monad_Eff_DOM.setInnerHTML("")(div)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
          };
      })();
      var _5 = validateControls();
      (function () {
          if (_5 instanceof Data_Either.Left) {
              return displayValidationErrors(_5.value0);
          };
          if (_5 instanceof Data_Either.Right) {
              return Control_Monad_Eff_Console.print(Data_AddressBook.showPerson)(_5.value0);
          };
          throw new Error("Failed pattern match at Data.AddressBook.UI line 61, column 1 - line 62, column 1: " + [ _5.constructor.name ]);
      })()();
      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
  };
  var setupEventHandlers = function __do() {
      Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_DOM.body)(Control_Monad_Eff_DOM.addEventListener("change")(validateAndUpdateUI))();
      return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
  };
  exports["setupEventHandlers"] = setupEventHandlers;
  exports["validateAndUpdateUI"] = validateAndUpdateUI;
  exports["validateControls"] = validateControls;
  exports["displayValidationErrors"] = displayValidationErrors;
  exports["valueOf"] = valueOf;;
 
})(PS["Data.AddressBook.UI"] = PS["Data.AddressBook.UI"] || {});
(function(exports) {
  // Generated by psc version 0.7.4.1
  "use strict";
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_AddressBook_UI = PS["Data.AddressBook.UI"];     
  var main = function __do() {
      Control_Monad_Eff_Console.log("Attaching event handlers")();
      return Data_AddressBook_UI.setupEventHandlers();
  };
  exports["main"] = main;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
